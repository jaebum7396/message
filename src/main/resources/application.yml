server:
  port: 9000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${DISCOVERY_URL}

spring:
  application:
    name: trade
  profiles:
    #active: local
    active: deploy
  redis:
    host: ${REDIS_URI}
    port: ${REDIS_PORT}
    password: ${REDIS_PASSWORD}
  datasource:
    url: jdbc:mysql://${AFLK_DB_URI}?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: ${AFLK_DB_USERNAME}
    password: ${AFLK_DB_PASSWORD}
    initialization-mode: always #import data
    hikari:
      maximum-pool-size: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  jackson:
    serialization:
      write-dates-as-timestamps: true
  jpa:
    properties:
      hibernate:
        use_sql_comments: 'false'
        format_sql: 'true'
        show_sql: 'true'
        cache:
          use_second_level_cache: 'false'
          use_query_cache: 'false'
    hibernate:
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: 'update'
      #ddl-auto=none:
    #show-sql: 'true'
    defer-datasource-initialization: 'true' #import data
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  devtools:
    restart:
      enabled: 'true'
    livereload:
      enabled: 'true'

logging:
  level:
    root: info
    org:
      hibernate:
        SQL: warn
        type:
          descriptor:
            sql: warn

binance:
  real:
    api:
      key: ${BINANCE_REAL_API_KEY}
    secret:
      key: ${BINANCE_REAL_SECRET_KEY}
  testnet:
    api:
      key: ${BINANCE_TESTNET_API_KEY}
    secret:
      key: ${BINANCE_TESTNET_SECRET_KEY}


#SECRET KEY
jwt:
  secret:
    key: ${JWT_SECRET_KEY}
jasypt:
  encryptor:
    password: ${JASYPT_ENCRYPTOR_PASSWORD}
token:
  access-expired-time : 14400000
  refresh-expired-time : 2629800000